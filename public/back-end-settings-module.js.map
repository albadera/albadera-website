{"version":3,"sources":["./src/app/back-end/settings/app-setting/app.setting.component.ts","./src/app/back-end/settings/app-setting/app.setting.component.html","./src/app/back-end/settings/general-setting/edit-general-setting/edit.general.setting.component.ts","./src/app/back-end/settings/general-setting/edit-general-setting/edit.general.setting.component.html","./src/services/port.service.ts","./src/app/back-end/settings/states/edit-state/edit-state.component.ts","./src/app/back-end/settings/states/create-state/create.state.component.html","./src/app/back-end/settings/ports/delete-port/delete.port.component.ts","./src/app/back-end/settings/ports/delete-port/delete.port.component.html","./src/app/back-end/settings/general-setting/general.setting.component.ts","./src/app/back-end/settings/general-setting/general.setting.component.html","./src/enums/port.types.enum.ts","./src/app/back-end/settings/general-setting/create-general-setting/create.general.setting.component.ts","./src/app/back-end/settings/general-setting/create-general-setting/create.general.setting.component.html","./src/modules/back-end/settings.router.module.ts","./src/app/back-end/settings/states/states.component.ts","./src/app/back-end/settings/states/states.component.html","./src/app/back-end/settings/states/delete-state/delete.state.component.ts","./src/app/back-end/settings/states/delete-state/delete.state.component.html","./src/services/general.setting.service.ts","./src/modules/back-end/settings.module.ts","./src/app/back-end/settings/states/create-state/create.state.component.ts","./src/app/back-end/settings/general-setting/delete-general-setting/delete.general.setting.component.ts","./src/app/back-end/settings/general-setting/delete-general-setting/delete.general.setting.component.html","./src/app/back-end/settings/ports/create-port/create.port.component.ts","./src/app/back-end/settings/ports/create-port/create.port.component.html","./src/app/back-end/settings/ports/edit-port/edit.port.component.ts","./src/services/state.service.ts","./src/app/back-end/settings/ports/ports.component.ts","./src/app/back-end/settings/ports/ports.component.html"],"names":[],"mappings":"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","file":"back-end-settings-module.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { SharedComponents } from \"src/app/shared.components\";\nimport { IAppSetting } from \"src/interfaces/i.app.setting\";\nimport { AlertService } from \"src/services/alert.service\";\nimport { CurrentUserService } from \"src/services/authentcation/current.user.service\";\nimport { CustomValidatorsService } from \"src/services/custom.validators.service\";\nimport { HttpService } from \"src/services/http/http.service\";\nimport { SEOService } from \"src/services/seo.service\";\n\n\n\n@Component({\n    selector: \"app-config\",\n    templateUrl: \"./app.setting.component.html\"\n})\nexport class AppSettingComponent extends SharedComponents implements OnInit {\n    form: FormGroup;\n    isFormSubmitError: boolean;\n    isRequestingToServer: boolean;\n    constructor(public u: CurrentUserService, public http: HttpService,private seo:SEOService) {\n        super();\n    }\n\n\n    ngOnInit() {\n        this.seo.updateSEO(\"appSetting\");\n        this.form = new FormGroup({\n            _id: new FormControl(null, Validators.required),\n            nextRefranceNumber: new FormControl(null, [Validators.required, Validators.min(1), CustomValidatorsService.invalidNumber])\n        });\n        this.getAppSettingValues();\n    }\n\n    /**\n     * Get AppSetting Values\n     */\n    getAppSettingValues() {\n        this.http.getAppSettingValues<IAppSetting>().subscribe(res => {\n            this.isRequestingToServer = false;\n            if (res.isSuccess) {\n                debugger\n                this.form.setValue(res.result);\n            }\n        }, error => {\n            this.isRequestingToServer = false;\n            AlertService.canRequestError(error);\n        });\n    }\n\n\n    /** On Form Submit */\n    onSubmit() {\n        if (this.form.invalid) {\n            this.isFormSubmitError = true;\n            AlertService.errorMessage(this.u.r.youHaveSomeErrors);\n            return;\n        }\n\n        this.isRequestingToServer = true;\n        this.isFormSubmitError = false;\n        this.form.disable();\n        this.allSubscriptions.push(\n            this.http.updateAppSettingValues<IAppSetting>(this.form.value)\n                .subscribe(res => {\n                    AlertService.showResponseMessage(res);\n                    this.form.enable();\n                        this.isRequestingToServer = false;\n                }, error => {\n                    this.form.enable();\n                    this.isRequestingToServer = false;\n                    AlertService.canRequestError(error);\n                }));\n    }\n}//End Class","<form novalidate [class.form-submited]=\"isFormSubmitError\" [formGroup]=\"form\" (submit)=\"onSubmit()\" autocomplete=\"off\">\n    <div class=\"account-settings-container layout-top-spacing\">\n        <div class=\"account-content\">\n            <div class=\"scrollspy-example\" data-spy=\"scroll\" data-target=\"#account-settings-scroll\" data-offset=\"-100\">\n                <div class=\"row\">\n                    <!--General Information-->\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 layout-spacing\">\n                        <div class=\"section\">\n                            <div class=\"info\">\n                                <h6 class=\"\" [innerHtml]=\"u.r.transactionSetting\"></h6>\n                                <div class=\"row\">\n                                    <div class=\"col-lg-11 mx-auto\">\n                                        <div class=\"form\">\n                                            <!--R O W 1-->\n                                            <div class=\"row\">\n                                                <!--Next Refrance Number-->\n                                                <div class=\"col form-group\" app-text-input [form]=\"form\"\n                                                    [lable]=\"u.r.nextRefranceNumber\" fcn=\"nextRefranceNumber\"\n                                                    [formSubmitError]=\"isFormSubmitError\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"account-settings-footer\">\n            <div class=\"as-footer-container d-flex justify-content-end\">\n                <button id=\"multiple-messages\" class=\"btn btn-primary\" type=\"submit\" [disabled]=\"isRequestingToServer\">\n                    {{u.r.saveChange}}\n                    <div *ngIf=\"isRequestingToServer\" [title]=\"u.r.loadingData\"\n                        class=\"spinner-grow text-white mr-2 align-self-center loader-sm\"></div>\n                </button>\n            </div>\n        </div>\n    </div>\n</form>","import { AlertService } from '../../../../../services/alert.service';\nimport { CurrentUserService } from '../../../../../services/authentcation/current.user.service';\nimport { IGeneralSetting } from '../../../../../interfaces/i.general.setting.interface';\nimport { HttpService } from '../../../../../services/http/http.service';\nimport { Router } from '@angular/router';\nimport { GeneralSettingService } from '../../../../../services/general.setting.service';\nimport { Component, Input, IterableDiffers, OnInit } from '@angular/core';\nimport { ActivatedRoute, ActivationEnd } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { SharedComponents } from 'src/app/shared.components';\n\n@Component({\n  selector: 'app-edit-general-setting',\n  templateUrl: './edit.general.setting.component.html',\n  styles: [\n  ]\n})\nexport class EditGeneralSettingComponent extends SharedComponents implements OnInit {\n  form: FormGroup = new FormGroup({\n    _id: new FormControl(null, Validators.required),\n    name: new FormControl(null, Validators.required)\n  });\n  formSubmitError: boolean = false;\n  isRequestingToServer: boolean = false;\n  constructor(public u: CurrentUserService, public gsService: GeneralSettingService, public http: HttpService,\n    private activateRouter: ActivatedRoute) { super() }\n\n  ngOnInit(): void {\n    if (!this.activateRouter.snapshot.params.targetId) {\n      this.gsService.closeModel();\n      return;\n    }\n\n    this.form.controls._id.setValue(this.activateRouter.snapshot.params.targetId);\n\n    //Check If Must Be Get Object From The Server\n    if (history.state.editingItemName) {\n      this.form.controls.name.setValue(history.state.editingItemName);\n      history.state.editingItemName = null;\n    }\n    else {\n      //Get From The Serer\n      this.getGenralSettingToUpdate();\n    }\n  }\n\n  /**\n   * Get Genral Setting From Server To Update\n   */\n  getGenralSettingToUpdate() {\n    this.allSubscriptions.push(\n      this.http.getGenralSettingToUpdate<IGeneralSetting>(this.activateRouter.snapshot.params.targetId, this.gsService.currentPageTargetName)\n        .subscribe(res => {\n          if (res.isSuccess) {\n            this.form.controls.name.setValue(res.result.name);\n          }\n        }, error => {\n          AlertService.canRequestError(error);\n        }));\n  }\n\n  /**\n   * Update Item\n   */\n  onSubmit() {\n    if (this.form.invalid) {\n      this.formSubmitError = true;\n      return;\n    }\n    this.isRequestingToServer = true;\n    this.form.disable();\n    this.allSubscriptions.push(\n      this.http.updateGeneralSetting<IGeneralSetting>(this.form.value, this.gsService.currentPageTargetName)\n        .subscribe(res => {\n          AlertService.showResponseMessage(res);\n          if (res.isSuccess) {\n            //Pass The New Item To Page\n            this.gsService.onEditedItem.emit(res.result);\n            //Back To Component\n            this.gsService.closeModel();\n          }\n        }, error => {\n\n          AlertService.canRequestError(error);\n        }));\n  }\n\n}//End Class\n","<!-- Modal -->\n<div class=\"modal fade show \" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\"\n    style=\"display: block; \">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\" [innerHtml]=\"u.r.editing\"></h5>\n                <button type=\"button\" class=\"close\" (click)=\"gsService.closeModel()\">\n                    <svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\n                        viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\" class=\"feather feather-x\">\n                        <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                        <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                    </svg>\n                </button>\n            </div>\n            <form novalidate [formGroup]=\"form\" (submit)=\"onSubmit()\" [class.form-submited]=\"formSubmitError\">\n            <div class=\"modal-body\">\n                    <!--R O W 1-->\n                    <div class=\"form-row mb-2\">\n                        <!--Name-->\n                        <div class=\"form-group col\">\n                            <label for=\"name\" [innerHtml]=\"u.r.name\"></label>\n                            <input type=\"text\" class=\"form-control\" id=\"name\" [placeholder]=\"u.r.name\"\n                                formControlName=\"name\" focus>\n                            <!--Errors-->\n                            <small class=\"invalid-data\"\n                                *ngIf=\"form.get('name').hasError('required')&&formSubmitError\"\n                                [innerHtml]=\"u.r.thisFieldIsRequierd\"></small>\n                        </div>\n                    </div>\n            </div>\n            <div class=\"modal-footer\">\n                <!--Edit New Button-->\n                <button type=\"submit\" class=\"btn btn-outline-primary\" [disabled]=\"isRequestingToServer\">\n                    {{u.r.saveChange}}\n                    <div *ngIf=\"isRequestingToServer\" class=\"spinner-grow text-white mr-2 align-self-center loader-sm\">\n                    </div>\n                </button>\n                <!--Cancel Button-->\n                <button class=\"btn btn-outline-warning\" (click)=\"gsService.closeModel()\"\n                    [disabled]=\"isRequestingToServer\"><i class=\"flaticon-cancel-12\"></i>{{u.r.cancel}}\n                </button>\n            </div>\n        </form>\n\n        </div>\n    </div>\n</div>\n\n<div class=\"modal-backdrop fade show\"></div>","import { PortTypesEnum } from 'src/enums/port.types.enum';\nimport { EventEmitter, Injectable } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { CurrentUserService } from \"./authentcation/current.user.service\";\nimport { HttpService } from \"./http/http.service\";\nimport { SEOService } from \"./seo.service\";\nimport { CustomValidatorsService } from './custom.validators.service';\nimport { flatten } from '@angular/compiler';\nimport { SweetAlertService } from './sweet.alert.service';\n\n@Injectable()\nexport class PortService {\n\n    /** نوع الميناء */\n    portType: PortTypesEnum;\n    portTypeName: string = \"\";\n    form: FormGroup = new FormGroup({});\n    isFormSubmitError: boolean = false;\n    isRequestingToServer: boolean = false;\n    portTypeIsFreight: boolean = false;\n\n    /** \n     * Current Page Target\n     */\n    currentPageTargetName: string;\n\n    /** Deleted Item Event*/\n    onDeletedItem: EventEmitter<string> = new EventEmitter<string>();\n\n    constructor(public u: CurrentUserService, public http: HttpService, public router: Router,\n        public seo: SEOService, public sweetAlertService: SweetAlertService) { }\n    /**\n     * Close: Back To The Page\n     */\n    public closeModel() {\n\n        this.router.navigate(['/setting', \"ports\", this.portTypeName]);\n    }\n\n    /**\n     * Init Form To Create\n     */\n    initCreateUpdateForm() {\n        //Check If Action On Port Freight\n        if (this.portTypeIsFreight) {\n            this.form = new FormGroup({\n                _id: new FormControl(null),\n                name: new FormControl(null, [Validators.required]),\n                portType: new FormControl(this.portType, [Validators.required]),\n                maritimeFreightPriceToBigCar: new FormControl(null, [Validators.required, CustomValidatorsService.invalidNumber]),\n                maritimeFreightPriceToSmallCar: new FormControl(null, [Validators.required, CustomValidatorsService.invalidNumber]),\n                maritimeFreightPriceToMediumCar: new FormControl(null, [Validators.required, CustomValidatorsService.invalidNumber]),\n                backgroundColor: new FormControl(null, [Validators.required]),\n                fontColor: new FormControl(null, [Validators.required]),\n            });\n        } else {\n            this.form = new FormGroup({\n                _id: new FormControl(null),\n                name: new FormControl(null, [Validators.required]),\n                portType: new FormControl(this.portType, [Validators.required]),\n            });\n        }\n        this.isFormSubmitError = false;\n        this.isRequestingToServer = false;\n    }\n\n    /**\n     * Init Delete Form\n     */\n    initDeleteForm() {\n        this.form = new FormGroup({\n            _id: new FormControl(null, Validators.required),\n            name: new FormControl(null, Validators.required)\n        });\n        this.form.disable();\n        this.isFormSubmitError = false;\n        this.isRequestingToServer = false;\n    }\n\n    /**\n     * Update Port Type Target Information\n     */\n    updatePortTypeInformation(portType: PortTypesEnum) {\n        this.portType = portType;\n        switch (this.portType) {\n            case PortTypesEnum.arrival:\n                {\n                    this.portTypeIsFreight = false;\n                    this.portTypeName = \"arrival\";\n                    this.currentPageTargetName = \"arrivalPorts\";\n                }\n                break;\n            case PortTypesEnum.freight:\n                {\n                    this.portTypeIsFreight = true;\n                    this.portTypeName = \"freight\";\n                    this.currentPageTargetName = \"freightPorts\";\n                }\n                break;\n        }\n        this.updateSeoPage();\n    }\n\n    /** Update Page SEO */\n    updateSeoPage(pageName: string = this.currentPageTargetName) {\n        this.currentPageTargetName = pageName;\n        this.seo.updateSEO(pageName);\n    }\n\n}//End Class","import { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, Validators, FormGroup, FormArray } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { SEOService } from 'src/services/seo.service';\nimport { SharedComponents } from 'src/app/shared.components';\nimport { CurrentUserService } from 'src/services/authentcation/current.user.service';\nimport { HttpService } from 'src/services/http/http.service';\nimport { StateService } from 'src/services/state.service';\nimport { IState } from 'src/interfaces/i.state.interface';\nimport { AlertService } from 'src/services/alert.service';\nimport { CustomValidatorsService } from 'src/services/custom.validators.service';\n\n@Component({\n  selector: 'app-edit-state',\n  templateUrl: '../create-state/create.state.component.html',\n  styles: [\n  ]\n})\nexport class EditStateComponent extends SharedComponents implements OnInit {\n\n  titleResourcesKey = \"editState\";\n  constructor(public u: CurrentUserService,\n    private seo: SEOService,\n    private activateRouter: ActivatedRoute,\n    public stateService: StateService) { super() }\n\n  ngOnInit(): void {\n    this.seo.updateSEO(this.titleResourcesKey);\n    this.stateService.initForm();\n    this.stateService.form.controls._id.setValue(this.activateRouter.snapshot.params.targetId);\n    this.stateService.form.disable();\n    this.stateService.formCities.reset();\n    this.stateService.getItems();\n    this.getStateToUpdate();\n  }\n\n\n  /**\n   * Get Car Mark To Update\n   */\n  getStateToUpdate(): void {\n    this.stateService.http.getStateToUpdate<IState>(this.stateService.form.controls._id.value).subscribe(res => {\n      if (res.isSuccess) {\n        this.updateFormData(res.result);\n      }\n      else {\n        AlertService.showResponseMessage(res);\n      }\n    }, error => {\n      AlertService.canRequestError(error);\n    });\n  }\n\n\n  /**\n    * Update  \n    */\n  onSubmit() {\n    if (this.stateService.form.invalid) {\n      this.stateService.formSubmitError = true;\n      return;\n    }\n    this.stateService.isRequestingToServer = true;\n    this.stateService.form.disable();\n    let objSaving = { ...this.stateService.form.value, ...{ cities: this.stateService.formCities.getRawValue().listOfCities } };\n\n    this.allSubscriptions.push(\n      this.stateService.http.updateState<IState>(objSaving).subscribe(res => {\n        this.stateService.isRequestingToServer = false;\n        AlertService.showResponseMessage(res);\n        this.stateService.form.enable();\n        if (res.isSuccess) {\n          this.stateService.initForm();\n          this.updateFormData(res.result);\n        }\n      }, error => {\n        this.stateService.form.enable();\n        this.stateService.isRequestingToServer = false;\n        AlertService.canRequestError(error);\n      }));\n  }\n\n  /** Update Form Data */\n  updateFormData(res: IState) {\n    this.stateService.form.enable();\n    this.stateService.form.controls._id.setValue(res._id);\n    this.stateService.form.controls.name.setValue(res.name);\n    this.stateService.form.controls.freightPortId.setValue(res.freightPortId);\n    this.stateService.addNewCityV2(res.cities)\n  }\n}//End Class\n","<div class=\"account-settings-container layout-top-spacing\">\n    <div class=\"account-content\">\n        <div class=\"scrollspy-example\" data-spy=\"scroll\" data-target=\"#account-settings-scroll\" data-offset=\"-100\">\n            <div class=\"row\">\n                <!--General Information-->\n                <div class=\"col-xl-12 col-lg-12 col-md-12 layout-spacing\">\n                    <div class=\"section\">\n                        <div class=\"info\">\n                            <h6 class=\"\" [innerHtml]=\"u.r[titleResourcesKey]\"></h6>\n                            <div class=\"row\">\n                                <div class=\"col-lg-11 mx-auto\">\n                                    <!--Uplaod Image-->\n                                    <div class=\"form\">\n                                        <!--F O R M 1-->\n                                        <form novalidate [class.form-submited]=\"stateService.formSubmitError\"\n                                            [formGroup]=\"stateService.form\" (submit)=\"onSubmit()\" autocomplete=\"off\">\n                                            <!--R O W 1-->\n\n                                            <div class=\"row\">\n                                                <!--Name-->\n                                                <div class=\"col-sm-6  mb-6 form-group\">\n                                                    <label for=\"name\" [innerHtml]=\"u.r.stateName\"></label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\"\n                                                        formControlName=\"name\" [title]=\"u.r.enterStateName\">\n                                                    <!--Errors-->\n                                                    <small class=\"invalid-data\"\n                                                        *ngIf=\"stateService.form.get('name').hasError('required')&&stateService.formSubmitError\"\n                                                        [innerHtml]=\"u.r.thisFieldIsRequierd\"></small>\n                                                </div>\n\n\n                                                <!--Freight Port-->\n                                                <div class=\"col-sm-6   mb-6 form-group\" app-select-input\n                                                    [list]=\"stateService.freightPorts\" [form]=\"stateService.form\"\n                                                    [lable]=\"u.r.freightPort\" fcn=\"freightPortId\"\n                                                    [formSubmitError]=\"stateService.formSubmitError\"\n                                                    (onReloadItems)=\"stateService.reloadItems('freightPorts')\">\n                                                </div>\n                                            </div>\n                                            <!--Hidden Submit Button To Active Submite By Enter In Input-->\n                                            <button type=\"submit\" hidden></button>\n                                        </form>\n\n                                        <!--F O R M 2-->\n                                        <form novalidate [class.form-submited]=\"stateService.formCiteisSubmitError\"\n                                            [formGroup]=\"stateService.formCities\" autocomplete=\"off\">\n                                            <!--R O W 4-->\n                                            <div class=\"row\">\n                                                <!--Cities-->\n                                                <div class=\"col-12 form-group\">\n                                                    <label for=\"models\" [innerHtml]=\"u.r.citties\"></label>\n                                                    <table class=\"table mb-4 table-hover table-bordered\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th class=\"th-40\" [innerText]=\"u.r.cityName\"></th>\n                                                                <th class=\"th-40\" [innerText]=\"u.r.landFreightPrice\">\n                                                                </th>\n                                                                <th class=\"th-10\" [innerText]=\"u.r.actions\"></th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            <!--Row For Add New-->\n                                                            <tr>\n                                                                <td>\n                                                                    <input type=\"text\" class=\"form-control\"\n                                                                        formControlName=\"name\" />\n                                                                    <!--Errors-->\n                                                                    <small class=\"invalid-data\"\n                                                                        *ngIf=\"stateService.formCities.get('name').hasError('required')&&stateService.formCiteisSubmitError\"\n                                                                        [innerHtml]=\"u.r.thisFieldIsRequierd\"></small>\n                                                                </td>\n                                                                <td><input type=\"text\"\n                                                                        formControlName=\"landFreightPrice\"\n                                                                        class=\"form-control\" />\n                                                                    <!--Errors-->\n                                                                    <small class=\"invalid-data\"\n                                                                        *ngIf=\"stateService.formCities.get('landFreightPrice').hasError('invalidNumber')&&stateService.formCiteisSubmitError\"\n                                                                        [innerHtml]=\"u.r.invalidNumber\"></small>\n                                                                </td>\n                                                                <td>\n                                                                    <button type=\"button\"\n                                                                        class=\"btn btn-outline-dark mb-2\"\n                                                                        (click)=\"stateService.addNewCity()\"\n                                                                        [innerText]=\"u.r.add\"></button>\n\n                                                                </td>\n                                                            </tr>\n                                                            <tr *ngFor=\"let cityGroup of stateService.listOfCitiesControl ;let i=index\"\n                                                                [formGroup]=\"cityGroup\">\n                                                                <td> <input type=\"text\" class=\"form-control\"\n                                                                        formControlName=\"name\" />\n                                                                    <!--Errors-->\n                                                                    <small class=\"invalid-data\"\n                                                                        *ngIf=\"cityGroup.get('name').hasError('required')\"\n                                                                        [innerHtml]=\"u.r.thisFieldIsRequierd\"></small>\n                                                                </td>\n                                                                <td><input type=\"text\"\n                                                                        formControlName=\"landFreightPrice\"\n                                                                        class=\"form-control\" />\n                                                                    <!--Errors-->\n                                                                    <small class=\"invalid-data\"\n                                                                        *ngIf=\"cityGroup.get('landFreightPrice').hasError('invalidNumber')\"\n                                                                        [innerHtml]=\"u.r.invalidNumber\"></small>\n                                                                </td>\n                                                                <td>\n                                                                    <button type=\"button\"\n                                                                        *ngIf=\"!cityGroup.get('IsDeleting').value\"\n                                                                        class=\"btn btn-outline-danger mb-2\"\n                                                                        (click)=\"stateService.removeCity(i)\"\n                                                                        [innerText]=\"u.r.remove\"></button>\n                                                                </td>\n                                                            </tr>\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                        </form>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"account-settings-footer\">\n        <div class=\"as-footer-container d-flex justify-content-end\">\n            <button id=\"multiple-messages\" class=\"btn btn-primary\" type=\"submit\" (click)=\"onSubmit()\"\n                [disabled]=\"stateService.isRequestingToServer\">\n                {{u.r.saveChange}}\n                <div *ngIf=\"stateService.isRequestingToServer\" [title]=\"u.r.loadingData\"\n                    class=\"spinner-grow text-white mr-2 align-self-center loader-sm\"></div>\n            </button>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { SharedComponents } from \"src/app/shared.components\";\nimport { IPort } from \"src/interfaces/i.port.interface\";\nimport { AlertService } from \"src/services/alert.service\";\nimport { PortService } from \"src/services/port.service\";\n\n@Component({\n  selector: 'app-delete-general-setting',\n  templateUrl: './delete.port.component.html',\n  styles: [\n  ]\n})\nexport class DeletePortComponent extends SharedComponents implements OnInit {\n  constructor(public service: PortService,private activateRouter:ActivatedRoute) { super() }\n\n  ngOnInit(): void {\n    if (!this.activateRouter.snapshot.params.targetId) {\n      this.service.closeModel();\n      return;\n    }\n    this.service.initDeleteForm();\n\n\n    //Check If Must Be Get Object From The Server\n    if (history.state.deletingItemName) {\n      this.service.form.controls.name.setValue(history.state.deletingItemName);\n      history.state.deletingItemName = null;\n    }\n    else {\n      //Get From The Server To Delete\n      this.getPortToDelete();\n    }\n  }\n\n  /**\n   * Get Genral Setting From Server To Delete\n   */\n  getPortToDelete() {\n    this.service.isRequestingToServer = true;\n    this.allSubscriptions.push(\n      this.service.http.getPortToDelete<IPort>(this.activateRouter.snapshot.params.targetId)\n        .subscribe(res => {\n          this.service.isRequestingToServer = false;\n          if (res.isSuccess) {\n            this.service.form.controls.name.setValue(res.result.name);\n          }\n        }, error => {\n          this.service.isRequestingToServer = false;\n          AlertService.canRequestError(error);\n        }));\n  }\n\n  /**\n   * Delete Item\n   */\n  onSubmit() {\n    if (this.service.form.invalid) {\n      this.service.isFormSubmitError = true;\n      return;\n    }\n    this.service.isRequestingToServer = true;\n    this.allSubscriptions.push(\n      this.service.http.deletePort<IPort>(this.activateRouter.snapshot.params.targetId)\n        .subscribe(res => {\n          AlertService.showResponseMessage(res);\n          this.service.isRequestingToServer = false;\n          if (res.isSuccess) {\n            //Pass The New Item To Page\n            this.service.onDeletedItem.emit(this.activateRouter.snapshot.params.targetId);\n            //Back To Component\n            this.service.closeModel();\n          }\n        }, error => {\n          this.service.isRequestingToServer = false;\n          AlertService.canRequestError(error);\n        }));\n  }\n\n}//End Class\n","<!-- Modal -->\n<div class=\"modal fade show \" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\"\n    style=\"display: block; \">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div class=\"modal-content\">\n            <form novalidate [formGroup]=\"service.form\" (submit)=\"onSubmit()\" [class.form-submited]=\"service.isFormSubmitError\">\n                <div class=\"modal-body\">\n                    <!--R O W 1-->\n                    <div class=\"form-row mb-2\">\n                        <!--Name-->\n                        <div class=\"form-group col\">\n                            <label for=\"name\" [innerHtml]=\"service.u.r.areYouSureToDeleteThe\"></label> \n                            <input type=\"text\" class=\"form-control\" id=\"name\" [placeholder]=\"service.u.r.name\"\n                                formControlName=\"name\" focus>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <!--Delete Button-->\n                    <button type=\"submit\" class=\"btn btn-outline-danger\" [disabled]=\"service.isRequestingToServer\">\n                        {{service.u.r.yesDelete}}\n                        <div *ngIf=\"service.isRequestingToServer\"\n                            class=\"spinner-grow text-white mr-2 align-self-center loader-sm\">\n                        </div>\n                    </button>\n                    <!--Cancel Button-->\n                    <button class=\"btn btn-outline-warning\" (click)=\"service.closeModel()\"\n                        [disabled]=\"service.isRequestingToServer\"><i class=\"flaticon-cancel-12\"></i>{{service.u.r.cancel}}\n                    </button>\n                </div>\n            </form>\n\n        </div>\n    </div>\n</div>\n\n<div class=\"modal-backdrop fade show\"></div>","import { IGeneralSetting } from '../../../../interfaces/i.general.setting.interface';\nimport { HttpService } from '../../../../services/http/http.service';\nimport { CurrentUserService } from 'src/services/authentcation/current.user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FOPModel } from 'src/models/fop/fop.model';\nimport { FormGroup } from '@angular/forms';\nimport { SharedComponents } from 'src/app/shared.components';\nimport { SEOService } from 'src/services/seo.service';\nimport { AlertService } from 'src/services/alert.service';\nimport { GeneralSettingService } from 'src/services/general.setting.service';\nimport { localizedString } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './general.setting.component.html',\n  styles: [\n  ]\n})\n/**\n * This a general controller \n * \n */\nexport class GeneralSettingComponent extends SharedComponents implements OnInit {\n  /**\n   * Page Target\n   */\n  skip: number = 0;\n  limit: number = 50;\n  entries: IGeneralSetting[];\n  fop: FOPModel = new FOPModel();\n  fopSearch: string;\n  constructor(public u: CurrentUserService, private activRouter: ActivatedRoute, private seo: SEOService, private http: HttpService, public gsService: GeneralSettingService) { super() }\n\n  ngOnInit(): void {\n    //Listener On Parems\n    this.allSubscriptions.push(\n      this.activRouter.params.subscribe(parms => {\n        this.gsService.currentPageTargetName = parms.pageTargetName;\n        this.seo.updateSEO(this.gsService.currentPageTargetName);\n        this.entries = [];\n        this.skip = 0\n        this.fop = new FOPModel();\n        this.getEntiries();\n      })\n\n    );\n    //Listener On Create New Item Event\n    this.allSubscriptions.push(this.gsService.onCreatedNewItem.subscribe(newItem => {\n      this.entries = [newItem, ...this.entries];\n      this.fop = new FOPModel(this.fop.fieldNames, this.entries.length);\n    }));\n    //Listener On Edit Item Event\n    this.allSubscriptions.push(\n      this.gsService.onEditedItem.subscribe(editedItem => {\n        let editedNameTarget = this.entries.find(ent => ent._id == editedItem._id);\n        if (editedNameTarget)\n          editedNameTarget.name = editedItem.name;\n      }));\n\n    //Listener On Delete Item Event\n    this.allSubscriptions.push(\n      this.gsService.onDeletedItem.subscribe(deletedItemId => {\n        let deletedIndex = this.entries.findIndex(ent => ent._id == deletedItemId);\n        if (deletedIndex >= 0) {\n          this.entries.splice(deletedIndex, 1);\n          this.fop = new FOPModel(this.fop.fieldNames, this.entries.length);\n        }\n      }));\n\n  }\n\n\n  /**\n * Get My Users\n */\n  getEntiries(isFilter: boolean = false): void {\n    this.fop.paging.isRequestingToServer = true;\n\n    //Get Users Now From Server\n    this.allSubscriptions.push(\n      this.http.getGeneralSettings<IGeneralSetting[]>(this.skip, this.limit, this.gsService.currentPageTargetName).subscribe(res => {\n        //Update FOP Properties\n        if (res.noMoreOfResult)\n          this.fop.paging.disableGetMoreButton = true;\n        this.fop.paging.isRequestingToServer = false;\n\n        if (res.isSuccess) {\n          this.entries = [...this.entries, ...res.result];\n\n          //Fop \n          this.fop = new FOPModel(this.fop.fieldNames, this.entries.length);\n          this.skip += this.limit;\n        } else {\n          AlertService.showResponseMessage(res);\n        }\n      }, error => {\n        AlertService.canRequestError(error);\n        this.fop.paging.isRequestingToServer = false;\n      }, () => {\n        this.fop.paging.isRequestingToServer = false;\n      }));\n  }\n\n\n  funTrack(index: number, entitiy: IGeneralSetting): string | undefined {\n    return entitiy?._id;\n  }\n}//End Class\n","<!--Table-->\n<div class=\"row layout-top-spacing\">\n    <div class=\"col-lg-12\">\n        <div class=\"statbox widget  \">\n            <div class=\"widget-header\">\n                <div class=\"d-flex justify-content-between\">\n                    <div>\n                        <h4 [innerHtml]=\"u.r[gsService.currentPageTargetName]\"></h4>\n                    </div>\n                    <div>\n                        <a [routerLink]=\"['/setting',gsService.currentPageTargetName,'create']\"\n                            class=\"btn btn-outline-dark mb-2\" [innerHtml]=\"u.r.createNew\"></a>\n                    </div>\n                </div>\n            </div>\n            <div class=\"widget-content widget-content-area\">\n                <div class=\"row form-group\">\n                    <div class=\"table-responsive\">\n                        <!--SMS Print,Excel,PDF,Search,....-->\n                        <fop-header tableId=\"generalSettingTable\" (searchText)=\"fopSearch=$event\"></fop-header>\n                        <table id=\"generalSettingTable\" class=\"table mb-4 table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"th-90\">\n                                        <fop-sort [fop]=\"fop\" filedName=\"name\" [fieldText]=\"u.r.name\">\n                                        </fop-sort>\n                                    </th>\n                                    <th class=\"th-10\" [innerHtml]=\"u.r.actions\"></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr\n                                    *ngFor=\"let item of entries|fopFilterPipe:fopSearch:fop |fopSortPipe:fop.sort.fieldName: fop.sort.reverse  | slice:fop.paging.pagingLimt.skip:fop.paging.pagingLimt.take;trackBy:funTrack\">\n                                    <td [innerHtml]=\"item.name\"></td>\n                                    <td style=\"display: inline-flex;\">\n                                        <!--Loader-->\n                                        <div class=\"spinner-grow text-danger align-self-center loader-sm\"\n                                            *ngIf=\"item.actionDisapled\">\n                                        </div>\n\n                                        <!--Edit-->\n                                        <a *ngIf=\"!item.actionDisapled\"\n                                            [routerLink]=\"['/setting',gsService.currentPageTargetName,'edit',item._id]\"\n                                            [state]=\"{editingItemName:item.name}\" class=\"mr-2\" [title]=\"u.r.edit\">\n                                            <i class=\"far fa-edit fa-1-5x  jumb-animation\"></i>\n                                        </a>\n\n                                        <!--Delete-->\n                                        <a *ngIf=\"!item.actionDisapled\"\n                                            [routerLink]=\"['/setting',gsService.currentPageTargetName,'delete',item._id]\"\n                                            [state]=\"{deletingItemName:item.name}\" class=\"mr-2\" [title]=\"u.r.delete\">\n                                            <i class=\"far fa-trash-alt fa-1-5x  jumb-animation\"></i>\n                                        </a>\n\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <!--Paging-->\n                        <fop-paging [fop]=\"fop\" (getMoreItems)=\"getEntiries()\"></fop-paging>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!--Router Let For Create And Update Compoentns-->\n<router-outlet></router-outlet>","export enum PortTypesEnum{\n    /** ميناء شحن */\n    freight=1,\n    /** ميناء وصول */\n    arrival=2\n\n}","import { IGeneralSetting } from '../../../../../interfaces/i.general.setting.interface';\nimport { HttpService } from '../../../../../services/http/http.service';\nimport { Router } from '@angular/router';\nimport { GeneralSettingService } from '../../../../../services/general.setting.service';\nimport { CurrentUserService } from 'src/services/authentcation/current.user.service';\nimport { Component, Input, IterableDiffers, OnInit } from '@angular/core';\nimport { ActivatedRoute, ActivationEnd } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { SharedComponents } from 'src/app/shared.components';\nimport { AlertService } from 'src/services/alert.service';\n\n@Component({\n  selector: 'app-create-general-setting',\n  templateUrl: './create.general.setting.component.html',\n  styles: [\n  ]\n})\nexport class CreateGeneralSettingComponent extends SharedComponents implements OnInit {\n  form: FormGroup = new FormGroup({\n    name: new FormControl(null, Validators.required)\n  });\n  formSubmitError: boolean = false;\n  isRequestingToServer: boolean = false;\n  constructor(public u: CurrentUserService, public gsService: GeneralSettingService, public http: HttpService) { super() }\n\n  ngOnInit(): void {\n    \n  }\n\n  /**\n   * Create New Item\n   */\n  onSubmit() {\n    if (this.form.invalid) {\n      this.formSubmitError = true;\n      return;\n    }\n    this.isRequestingToServer = true;\n    this.form.disable();\n    this.allSubscriptions.push(\n      this.http.createNewGeneralSetting<IGeneralSetting>(this.form.value, this.gsService.currentPageTargetName)\n        .subscribe(res => {\n\n          AlertService.showResponseMessage(res);\n          if (res.isSuccess) {\n            //Pass The New Item To Page\n            this.gsService.onCreatedNewItem.emit(res.result);\n            //Back To Component\n            this.gsService.closeModel();\n          }\n        }, error => {\n          this.form.enable();\n          this.isRequestingToServer = false;\n          AlertService.canRequestError(error);\n        }));\n  }\n\n}//End Class\n","<!-- Modal -->\n<div class=\"modal fade show \" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\"\n    style=\"display: block; \">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\" [innerHtml]=\"u.r.createNew\"></h5>\n                <button type=\"button\" class=\"close\" (click)=\"gsService.closeModel()\">\n                    <svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\n                        viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\" class=\"feather feather-x\">\n                        <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                        <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                    </svg>\n                </button>\n            </div>\n            <form novalidate [formGroup]=\"form\" (submit)=\"onSubmit()\" [class.form-submited]=\"formSubmitError\">\n            <div class=\"modal-body\">\n                    <!--R O W 1-->\n                    <div class=\"form-row mb-2\">\n                        <!--Name-->\n                        <div class=\"form-group col\">\n                            <label for=\"name\" [innerHtml]=\"u.r.name\"></label>\n                            <input type=\"text\" class=\"form-control\" id=\"name\" [placeholder]=\"u.r.name\"\n                                formControlName=\"name\" focus>\n                            <!--Errors-->\n                            <small class=\"invalid-data\"\n                                *ngIf=\"form.get('name').hasError('required')&&formSubmitError\"\n                                [innerHtml]=\"u.r.thisFieldIsRequierd\"></small>\n                        </div>\n                    </div>\n            </div>\n            <div class=\"modal-footer\">\n                <!--Create New Button-->\n                <button type=\"submit\" class=\"btn btn-outline-primary\" [disabled]=\"isRequestingToServer\">\n                    {{u.r.create}}\n                    <div *ngIf=\"isRequestingToServer\" class=\"spinner-grow text-white mr-2 align-self-center loader-sm\">\n                    </div>\n                </button>\n                <!--Cancel Button-->\n                <button class=\"btn btn-outline-warning\" (click)=\"gsService.closeModel()\"\n                    [disabled]=\"isRequestingToServer\"><i class=\"flaticon-cancel-12\"></i>{{u.r.cancel}}\n                </button>\n            </div>\n        </form>\n\n        </div>\n    </div>\n</div>\n\n<div class=\"modal-backdrop fade show\"></div>","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { AppSettingComponent } from \"src/app/back-end/settings/app-setting/app.setting.component\";\nimport { CreateGeneralSettingComponent } from \"src/app/back-end/settings/general-setting/create-general-setting/create.general.setting.component\";\nimport { DeleteGeneralSettingComponent } from \"src/app/back-end/settings/general-setting/delete-general-setting/delete.general.setting.component\";\nimport { EditGeneralSettingComponent } from \"src/app/back-end/settings/general-setting/edit-general-setting/edit.general.setting.component\";\nimport { GeneralSettingComponent } from \"src/app/back-end/settings/general-setting/general.setting.component\";\nimport { CreatePortComponent } from \"src/app/back-end/settings/ports/create-port/create.port.component\";\nimport { DeletePortComponent } from \"src/app/back-end/settings/ports/delete-port/delete.port.component\";\nimport { EditPortComponent } from \"src/app/back-end/settings/ports/edit-port/edit.port.component\";\nimport { PortsComponent } from \"src/app/back-end/settings/ports/ports.component\";\nimport { CreateStateComponent } from \"src/app/back-end/settings/states/create-state/create.state.component\";\nimport { DeleteStateComponent } from \"src/app/back-end/settings/states/delete-state/delete.state.component\";\nimport { EditStateComponent } from \"src/app/back-end/settings/states/edit-state/edit-state.component\";\nimport { StatesComponent } from \"src/app/back-end/settings/states/states.component\";\nimport { PortTypesEnum } from \"src/enums/port.types.enum\";\n\nconst ROUTS: Routes = [\n    {\n        path: 'app', component: AppSettingComponent\n    },\n    {\n        path: 'states', component: StatesComponent,\n        children: [\n            {\n                path: \"delete/:targetId\",\n                component: DeleteStateComponent,\n            }\n        ]\n    },\n    { path: 'states/create', component: CreateStateComponent },\n    { path: 'states/edit/:targetId', component: EditStateComponent },\n\n    //Ports Freight\n    {\n        path: 'ports/freight', component: PortsComponent, data: { portType: PortTypesEnum.freight },\n        children: [{ path: \"delete/:targetId\", component: DeletePortComponent, data: { portType: PortTypesEnum.freight } },]\n    },\n    { path: \"ports/freight/edit/:targetId\", component: EditPortComponent, data: { portType: PortTypesEnum.freight } },\n    {\n        path: \"ports/freight/create\",\n        component: CreatePortComponent,\n        data: { portType: PortTypesEnum.freight }\n    },\n    //Ports Arrival\n    {\n        path: 'ports/arrival', component: PortsComponent, data: { portType: PortTypesEnum.arrival },\n        children: [{ path: \"delete/:targetId\", component: DeletePortComponent, data: { portType: PortTypesEnum.arrival } }]\n    },\n    {\n        path: \"ports/arrival/edit/:targetId\",\n        component: EditPortComponent,\n        data: { portType: PortTypesEnum.arrival }\n    },\n    {\n        path: \"ports/arrival/create\",\n        component: CreatePortComponent,\n        data: { portType: PortTypesEnum.arrival }\n    },\n\n    //General Setting\n    {\n        path: ':pageTargetName', component: GeneralSettingComponent,\n        children: [\n            {\n                path: \"create\",\n                component: CreateGeneralSettingComponent\n            },\n            {\n                path: \"edit/:targetId\",\n                component: EditGeneralSettingComponent,\n            },\n            {\n                path: \"delete/:targetId\",\n                component: DeleteGeneralSettingComponent,\n            }\n        ]\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(ROUTS)],\n    exports: [RouterModule]\n})\nexport class SettingsRoutingModule {\n\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { SharedComponents } from 'src/app/shared.components';\nimport { FOPModel } from 'src/models/fop/fop.model';\nimport { CurrentUserService } from 'src/services/authentcation/current.user.service';\nimport { SEOService } from 'src/services/seo.service';\nimport { HttpService } from 'src/services/http/http.service';\nimport { AlertService } from 'src/services/alert.service';\nimport { IState } from 'src/interfaces/i.state.interface';\nimport { StateService } from 'src/services/state.service';\n\n@Component({\n  selector: 'app-state',\n  templateUrl: './states.component.html',\n  styles: [\n  ]\n})\nexport class StatesComponent extends SharedComponents implements OnInit {\n  /**\n   * Page Target\n   */\n  skip: number = 0;\n  limit: number = 50;\n  entries: IState[] = [];\n  fop: FOPModel = new FOPModel();\n  fopSearch: string;\n  constructor(public u: CurrentUserService, private seo: SEOService, public stateService: StateService) { super() }\n\n  ngOnInit(): void {\n    this.seo.updateSEO(\"states\");\n    this.getEntiries();\n\n    //Listener On Delete Item Event\n    this.allSubscriptions.push(\n      this.stateService.onDeletedItem.subscribe(deletedItemId => {\n        let deletedIndex = this.entries.findIndex(ent => ent._id == deletedItemId);\n        if (deletedIndex >= 0) {\n          this.entries.splice(deletedIndex, 1);\n          this.fop = new FOPModel(this.fop.fieldNames, this.entries.length);\n        }\n      }));\n  }\n\n\n  /**\n * Get My Users\n */\n  getEntiries(): void {\n    this.fop.paging.isRequestingToServer = true;\n\n    //Get Users Now From Server\n    this.allSubscriptions.push(\n      this.stateService.http.getStates<IState[]>(this.skip, this.limit).subscribe(res => {\n        //Update FOP Properties\n        if (res.noMoreOfResult)\n          this.fop.paging.disableGetMoreButton = true;\n        this.fop.paging.isRequestingToServer = false;\n\n        if (res.isSuccess) {\n          this.entries = [...this.entries, ...res.result];\n\n          //Fop \n          this.fop = new FOPModel(this.fop.fieldNames, this.entries.length);\n          this.skip += this.limit;\n        } else {\n          AlertService.showResponseMessage(res);\n        }\n      }, error => {\n        AlertService.canRequestError(error);\n        this.fop.paging.isRequestingToServer = false;\n      }, () => {\n        this.fop.paging.isRequestingToServer = false;\n      }));\n  }\n\n\n  funTrack(index: number, entitiy: IState): string | undefined {\n    return entitiy?._id;\n  }\n}//End CLass\n","<!--Table-->\n<div class=\"row layout-top-spacing\">\n    <div class=\"col-lg-12\">\n        <div class=\"statbox widget  \">\n            <div class=\"widget-header\">\n                <div class=\"d-flex justify-content-between\">\n                    <div>\n                        <h4 [innerText]=\"u.r.states\"></h4>\n                    </div>\n                    <div>\n                        <a [routerLink]=\"['/setting','states','create']\" class=\"btn btn-outline-dark mb-2\"\n                            [innerText]=\"u.r.createNew\"></a>\n                    </div>\n                </div>\n            </div>\n            <div class=\"widget-content widget-content-area\">\n                <div class=\"row form-group\">\n                    <div class=\"table-responsive\">\n                        <!--SMS Print,Excel,PDF,Search,....-->\n                        <fop-header id=\"statesTable\" (searchText)=\"fopSearch=$event\"></fop-header>\n                        <table id=\"statesTable\" class=\"table mb-4 table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"th-15\">\n                                        <fop-sort [fop]=\"fop\" filedName=\"name\" [fieldText]=\"u.r.stateName\">\n                                        </fop-sort>\n                                    </th>\n                                    \n                                    <th class=\"th-20\">\n                                        <fop-sort [fop]=\"fop\" filedName=\"numberOfCities\" [fieldText]=\"u.r.numberOfCities\">\n                                        </fop-sort>\n                                    </th>\n                                  \n                                    <th class=\"th-5\" [innerText]=\"u.r.actions\"></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr\n                                    *ngFor=\"let item of entries|fopFilterPipe:fopSearch:fop |fopSortPipe:fop.sort.fieldName: fop.sort.reverse  | slice:fop.paging.pagingLimt.skip:fop.paging.pagingLimt.take;trackBy:funTrack\">\n                                    <td [innerText]=\"item.name\"></td>\n                                    <td [innerText]=\"item.numberOfCities\"></td>\n                                    <td style=\"display: inline-flex;\">\n                                        <!--Loader-->\n                                        <div class=\"spinner-grow text-danger align-self-center loader-sm\"\n                                            *ngIf=\"item.actionDisapled\">\n                                        </div>\n\n                                        <!--Edit-->\n                                        <a *ngIf=\"!item.actionDisapled\"\n                                            [routerLink]=\"['/setting','states','edit',item._id]\"\n                                            [state]=\"{editingItemName:item.name}\" class=\"mr-2\" [title]=\"u.r.edit\">\n                                            <i class=\"far fa-edit fa-1-5x  jumb-animation\"></i>\n                                        </a>\n\n                                        <!--Delete-->\n                                        <a *ngIf=\"!item.actionDisapled\"\n                                            [routerLink]=\"['/setting','states','delete',item._id]\"\n                                            [state]=\"{deletingItemName:item.name}\" class=\"mr-2\" [title]=\"u.r.delete\">\n                                            <i class=\"far fa-trash-alt fa-1-5x  jumb-animation\"></i>\n                                        </a>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <!--Paging-->\n                        <fop-paging [fop]=\"fop\" (getMoreItems)=\"getEntiries()\"></fop-paging>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!--Router Let For Create And Update Compoentns-->\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SharedComponents } from 'src/app/shared.components';\nimport { IState } from 'src/interfaces/i.state.interface';\nimport { AlertService } from 'src/services/alert.service';\nimport { CurrentUserService } from 'src/services/authentcation/current.user.service';\nimport { HttpService } from 'src/services/http/http.service';\nimport { StateService } from 'src/services/state.service';\n\n@Component({\n  selector: 'app-delete-state',\n  templateUrl: './delete.state.component.html',\n  styles: [\n  ]\n})\nexport class DeleteStateComponent extends SharedComponents implements OnInit {\n\n  form: FormGroup = new FormGroup({\n    _id: new FormControl(null, Validators.required),\n    name: new FormControl(null, Validators.required)\n  });\n  formSubmitError: boolean = false;\n  isRequestingToServer: boolean = false;\n  constructor(public u: CurrentUserService, public stateService: StateService, \n    private activateRouter: ActivatedRoute) { super() }\n\n  ngOnInit(): void {\n    this.form.controls._id.setValue(this.activateRouter.snapshot.params.targetId);\n    this.form.disable();\n\n    //Check If Must Be Get Object From The Server\n    if (history.state.deletingItemName) {\n      this.form.controls.name.setValue(history.state.deletingItemName);\n      history.state.deletingItemName = null;\n    }\n    else {\n      //Get From The Serer\n      this.getStateToUpdate();\n    }\n  }\n\n  /**\n   * Get Car Mark From Server To Update\n   */\n  getStateToUpdate() {\n    this.isRequestingToServer = true;\n    this.allSubscriptions.push(\n      this.stateService.http.getStateToUpdate<IState>(this.activateRouter.snapshot.params.targetId)\n        .subscribe(res => {\n          this.isRequestingToServer = false;\n          if (res.isSuccess) {\n            this.form.controls.name.setValue(res.result.name);\n          }\n        }, error => {\n          this.isRequestingToServer = false;\n          AlertService.canRequestError(error);\n        }));\n  }\n\n  /**\n   * Delete Item\n   */\n  onSubmit() {\n    if (this.form.invalid) {\n      this.formSubmitError = true;\n      return;\n    }\n    this.isRequestingToServer = true;\n    this.allSubscriptions.push(\n      this.stateService.http.deleteState<IState>(this.form.value)\n        .subscribe(res => {\n          AlertService.showResponseMessage(res);\n          this.isRequestingToServer = false;\n          if (res.isSuccess) {\n            //Pass The New Item To Page\n            this.stateService.onDeletedItem.emit(this.activateRouter.snapshot.params.targetId);\n            //Back To Component\n            this.stateService.closeModel();\n          }\n        }, error => {\n          this.isRequestingToServer = false;\n          AlertService.canRequestError(error);\n        }));\n  }\n\n\n}//End Class\n","<!-- Modal -->\n<div class=\"modal fade show \" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\"\n    style=\"display: block; \">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div class=\"modal-content\">\n            <form novalidate [formGroup]=\"form\" (submit)=\"onSubmit()\" [class.form-submited]=\"formSubmitError\">\n                <div class=\"modal-body\">\n                    <!--R O W 1-->\n                    <div class=\"form-row mb-2\">\n                        <!--Name-->\n                        <div class=\"form-group col\">\n                            <label  [innerHtml]=\"u.r.areYouSureToDeleteThe\"></label> \n                            <input type=\"text\" class=\"form-control\" id=\"name\" [placeholder]=\"u.r.name\"\n                                formControlName=\"name\" focus>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <!--Delete Button-->\n                    <button type=\"submit\" class=\"btn btn-outline-danger\" [disabled]=\"isRequestingToServer\">\n                        {{u.r.yesDelete}}\n                        <div *ngIf=\"isRequestingToServer\"\n                            class=\"spinner-grow text-white mr-2 align-self-center loader-sm\">\n                        </div>\n                    </button>\n                    <!--Cancel Button-->\n                    <button class=\"btn btn-outline-warning\" (click)=\"stateService.closeModel()\"\n                        [disabled]=\"isRequestingToServer\"><i class=\"flaticon-cancel-12\"></i>{{u.r.cancel}}\n                    </button>\n                </div>\n            </form>\n\n        </div>\n    </div>\n</div>\n\n<div class=\"modal-backdrop fade show\"></div>","import { Router } from '@angular/router';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { IGeneralSetting } from 'src/interfaces/i.general.setting.interface';\n@Injectable()\nexport class GeneralSettingService {\n    /** \n     * Current Page Target\n     */\ncurrentPageTargetName:string;\n\n/** Created New Item Event*/\nonCreatedNewItem:EventEmitter<IGeneralSetting>=new EventEmitter<IGeneralSetting>();\n/** Updated Item Event*/\nonEditedItem:EventEmitter<IGeneralSetting>=new EventEmitter<IGeneralSetting>();\n/** Deleted Item Event*/\nonDeletedItem:EventEmitter<string>=new EventEmitter<string>();\n\nconstructor(private router:Router){}\n  /**\n   * Close: Back To The Page\n   */\n public closeModel(){\n \n    this.router.navigate(['/setting',this.currentPageTargetName]);\n      }\n}//End Class","import { NgModule } from \"@angular/core\";\nimport { AppSettingComponent } from \"src/app/back-end/settings/app-setting/app.setting.component\";\nimport { CreateGeneralSettingComponent } from \"src/app/back-end/settings/general-setting/create-general-setting/create.general.setting.component\";\nimport { DeleteGeneralSettingComponent } from \"src/app/back-end/settings/general-setting/delete-general-setting/delete.general.setting.component\";\nimport { EditGeneralSettingComponent } from \"src/app/back-end/settings/general-setting/edit-general-setting/edit.general.setting.component\";\nimport { GeneralSettingComponent } from \"src/app/back-end/settings/general-setting/general.setting.component\";\nimport { CreatePortComponent } from \"src/app/back-end/settings/ports/create-port/create.port.component\";\nimport { DeletePortComponent } from \"src/app/back-end/settings/ports/delete-port/delete.port.component\";\nimport { EditPortComponent } from \"src/app/back-end/settings/ports/edit-port/edit.port.component\";\nimport { PortsComponent } from \"src/app/back-end/settings/ports/ports.component\";\nimport { CreateStateComponent } from \"src/app/back-end/settings/states/create-state/create.state.component\";\nimport { DeleteStateComponent } from \"src/app/back-end/settings/states/delete-state/delete.state.component\";\nimport { EditStateComponent } from \"src/app/back-end/settings/states/edit-state/edit-state.component\";\nimport { StatesComponent } from \"src/app/back-end/settings/states/states.component\";\nimport { GeneralSettingService } from \"src/services/general.setting.service\";\nimport { PortService } from \"src/services/port.service\";\nimport { StateService } from \"src/services/state.service\";\nimport { FormInputsModeul } from \"./form.inputs.module\";\nimport { SettingsRoutingModule } from \"./settings.router.module\";\nimport { SharedBackEndModule } from \"./shared.back.end.module\";\n\n@NgModule({\n  declarations: [\n    GeneralSettingComponent,\n    CreateGeneralSettingComponent,\n    EditGeneralSettingComponent,\n    DeleteGeneralSettingComponent,\n    PortsComponent,\n    CreatePortComponent,\n    EditPortComponent,\n    DeletePortComponent,\n    StatesComponent,\n    CreateStateComponent,\n    DeleteStateComponent,\n    EditStateComponent,\n    AppSettingComponent\n  ],\n  imports: [\n    SharedBackEndModule,\n    SettingsRoutingModule,\n    FormInputsModeul\n  ],\n  providers:[GeneralSettingService,StateService,PortService]\n})\nexport class SettingsModule {\n}","import { HttpService } from 'src/services/http/http.service';\nimport { SweetAlertService } from 'src/services/sweet.alert.service';\nimport { StateService } from 'src/services/state.service';\nimport { CurrentUserService } from 'src/services/authentcation/current.user.service';\nimport { SharedComponents } from 'src/app/shared.components';\nimport { SEOService } from '../../../../../services/seo.service';\nimport { IState } from '../../../../../interfaces/i.state.interface';\nimport { FormArray, FormBuilder, FormControl, FormControlName, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertService } from 'src/services/alert.service';\nimport { CustomValidatorsService } from 'src/services/custom.validators.service';\nimport { IPort } from 'src/interfaces/i.port.interface';\n\n@Component({\n  selector: 'app-create-state',\n  templateUrl: './create.state.component.html',\n  styles: [\n  ]\n})\nexport class CreateStateComponent extends SharedComponents implements OnInit {\n  titleResourcesKey = \"createState\";\n  cites: [];\n  constructor(\n    public u: CurrentUserService, private seo: SEOService,\n    public stateService: StateService,\n    private router: Router,\n    public sweetAlertService: SweetAlertService) { super() }\n\n  ngOnInit(): void {\n    this.seo.updateSEO(this.titleResourcesKey);\n    this.stateService.initForm();\n    this.stateService.getItems();\n    this.stateService.formCities.reset();\n  }\n\n\n  /**\n    * Create New Item\n    */\n  onSubmit() {\n    if (this.stateService.form.invalid) {\n      this.stateService.formSubmitError = true;\n      return;\n    }\n    this.stateService.isRequestingToServer = true;\n    this.stateService.formCiteisSubmitError = false;\n    this.stateService.formSubmitError = false;\n\n    this.stateService.form.disable();\n\n    let objSaving = { ...this.stateService.form.value, ...{ cities: this.stateService.formCities.getRawValue().listOfCities } };\n\n    this.allSubscriptions.push(\n      this.stateService.http.createNewState<IState>(objSaving)\n        .subscribe(res => {\n          AlertService.showResponseMessage(res);\n          this.stateService.isRequestingToServer = false;\n          this.stateService.form.enable();\n          if (res.isSuccess) {\n            this.stateService.form.reset();\n            this.stateService.formCities.reset();\n            this.stateService.formCiteisSubmitError = false;\n            this.stateService.formSubmitError = false;\n            this.sweetAlertService.confirm(this.u.r.doYouWantEditCreatedItem, this.u.r.goToEdit, this.u.r.createNew).then(() => {\n              this.router.navigate(['/setting', 'states', 'edit', res.result._id])\n            })\n          }\n        }, error => {\n          this.stateService.form.enable();\n          this.stateService.isRequestingToServer = false;\n          AlertService.canRequestError(error);\n        }));\n  }\n\n}//End Class\n","import { AlertService } from '../../../../../services/alert.service';\nimport { CurrentUserService } from '../../../../../services/authentcation/current.user.service';\nimport { IGeneralSetting } from '../../../../../interfaces/i.general.setting.interface';\nimport { HttpService } from '../../../../../services/http/http.service';\nimport { Router } from '@angular/router';\nimport { GeneralSettingService } from '../../../../../services/general.setting.service';\nimport { Component, Input, IterableDiffers, OnInit } from '@angular/core';\nimport { ActivatedRoute, ActivationEnd } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { SharedComponents } from 'src/app/shared.components';\n\n@Component({\n  selector: 'app-delete-general-setting',\n  templateUrl: './delete.general.setting.component.html',\n  styles: [\n  ]\n})\nexport class DeleteGeneralSettingComponent extends SharedComponents implements OnInit {\n  form: FormGroup = new FormGroup({\n    _id: new FormControl(null, Validators.required),\n    name: new FormControl(null, Validators.required)\n  });\n  formSubmitError: boolean = false;\n  isRequestingToServer: boolean = false;\n  constructor(public u: CurrentUserService, public gsService: GeneralSettingService, public http: HttpService,\n    private activateRouter: ActivatedRoute) { super() }\n\n  ngOnInit(): void {\n    if (!this.activateRouter.snapshot.params.targetId) {\n      this.gsService.closeModel();\n      return;\n    }\n\n    this.form.controls._id.setValue(this.activateRouter.snapshot.params.targetId);\n    this.form.disable();\n\n    //Check If Must Be Get Object From The Server\n    if (history.state.deletingItemName) {\n      this.form.controls.name.setValue(history.state.deletingItemName);\n      history.state.deletingItemName = null;\n    }\n    else {\n      //Get From The Serer\n      this.getGenralSettingToUpdate();\n    }\n  }\n\n  /**\n   * Get Genral Setting From Server To Update\n   */\n  getGenralSettingToUpdate() {\n    this.isRequestingToServer = true;\n    this.allSubscriptions.push(\n      this.http.getGenralSettingToUpdate<IGeneralSetting>(this.activateRouter.snapshot.params.targetId, this.gsService.currentPageTargetName)\n        .subscribe(res => {\n          this.isRequestingToServer = false;\n          if (res.isSuccess) {\n            this.form.controls.name.setValue(res.result.name);\n          }\n        }, error => {\n          this.isRequestingToServer = false;\n          AlertService.canRequestError(error);\n        }));\n  }\n\n  /**\n   * Delete Item\n   */\n  onSubmit() {\n    if (this.form.invalid) {\n      this.formSubmitError = true;\n      return;\n    }\n    this.isRequestingToServer = true;\n    this.allSubscriptions.push(\n      this.http.deleteGeneralSetting<IGeneralSetting>(this.form.value, this.gsService.currentPageTargetName)\n        .subscribe(res => {\n          AlertService.showResponseMessage(res);\n          this.isRequestingToServer = false;\n          if (res.isSuccess) {\n            //Pass The New Item To Page\n            this.gsService.onDeletedItem.emit(this.activateRouter.snapshot.params.targetId);\n            //Back To Component\n            this.gsService.closeModel();\n          }\n        }, error => {\n          this.isRequestingToServer = false;\n          AlertService.canRequestError(error);\n        }));\n  }\n\n}//End Class\n","<!-- Modal -->\n<div class=\"modal fade show \" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\"\n    style=\"display: block; \">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div class=\"modal-content\">\n            <form novalidate [formGroup]=\"form\" (submit)=\"onSubmit()\" [class.form-submited]=\"formSubmitError\">\n                <div class=\"modal-body\">\n                    <!--R O W 1-->\n                    <div class=\"form-row mb-2\">\n                        <div class=\"form-group\">\n                            <h4 class=\"text-center\" [innerHtml]=\"u.r.areYouSureToDeleteThe\"></h4> \n                        </div>\n                        <!--Name-->\n                        <div class=\"form-group col\">\n                            <label for=\"name\" [innerHtml]=\"u.r.name\"></label> \n                            <input type=\"text\" class=\"form-control\" id=\"name\" [placeholder]=\"u.r.name\"\n                                formControlName=\"name\" focus>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <!--Delete Button-->\n                    <button type=\"submit\" class=\"btn btn-outline-danger\" [disabled]=\"isRequestingToServer\">\n                        {{u.r.yesDelete}}\n                        <div *ngIf=\"isRequestingToServer\"\n                            class=\"spinner-grow text-white mr-2 align-self-center loader-sm\">\n                        </div>\n                    </button>\n                    <!--Cancel Button-->\n                    <button class=\"btn btn-outline-warning\" (click)=\"gsService.closeModel()\"\n                        [disabled]=\"isRequestingToServer\"><i class=\"flaticon-cancel-12\"></i>{{u.r.cancel}}\n                    </button>\n                </div>\n            </form>\n\n        </div>\n    </div>\n</div>\n\n<div class=\"modal-backdrop fade show\"></div>","import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from \"@angular/core\";\nimport { SharedComponents } from \"src/app/shared.components\";\nimport { IPort } from \"src/interfaces/i.port.interface\";\nimport { AlertService } from \"src/services/alert.service\";\nimport { PortService } from \"src/services/port.service\";\n\n@Component({\n  selector: 'app-create-general-setting',\n  templateUrl: './create.port.component.html',\n  styles: [\n  ]\n})\nexport class CreatePortComponent extends SharedComponents implements OnInit {\n  constructor(public service: PortService, private activatedRoute: ActivatedRoute) { super() }\n  ngOnInit(): void {\n    this.service.updatePortTypeInformation(this.activatedRoute.snapshot.data.portType);\n    this.service.updateSeoPage(\"createANewPort\");\n    this.service.initCreateUpdateForm();\n  }\n\n  /**\n   * Create New Item\n   */\n  onSubmit() {\n    if (this.service.form.invalid) {\n      this.service.isFormSubmitError = true;\n      return;\n    }\n    this.service.isRequestingToServer = true;\n    this.service.form.disable();\n    this.allSubscriptions.push(\n      this.service.http.createNewPort<IPort>(this.service.form.value)\n        .subscribe(res => {\n\n          AlertService.showResponseMessage(res);\n          if (res.isSuccess) {\n            this.service.form.reset();\n            this.service.isRequestingToServer = false;\n            this.service.isFormSubmitError=false;\n            this.service.form.enable();\n            this.service.form.controls.portType.setValue(this.service.portType);\n            this.service.sweetAlertService.confirm(this.service.u.r.doYouWantEditCreatedItem, this.service.u.r.goToEdit, this.service.u.r.createNew).then(() => {\n              this.service.router.navigate(['/setting', 'ports', this.service.portTypeName, 'edit', res.result._id])\n            })\n          }\n        }, error => {\n          this.service.form.enable();\n          this.service.isRequestingToServer = false;\n          AlertService.canRequestError(error);\n        }));\n  }\n\n}//End Class\n","<form class=\"account-settings-container layout-top-spacing\" novalidate [class.form-submited]=\"service.isFormSubmitError\"\n    [formGroup]=\"service.form\" (submit)=\"onSubmit()\" autocomplete=\"off\">\n\n\n    <div class=\"account-content\">\n        <div class=\"scrollspy-example\" data-spy=\"scroll\" data-target=\"#account-settings-scroll\" data-offset=\"-100\">\n            <div class=\"row\">\n                <!--General Information-->\n                <div class=\"col-xl-12 col-lg-12 col-md-12 layout-spacing\">\n                    <div class=\"section\">\n                        <div class=\"info\">\n                            <h6 class=\"\" [innerHtml]=\"service.u.r[service.currentPageTargetName]\"></h6>\n                            <div class=\"row\">\n                                <div class=\"col-lg-11 mx-auto\">\n                                    <div class=\"form\">\n                                        <!--F O R M 1-->\n                                        <!--R O W 1-->\n                                        <div class=\"row\">\n\n                                            <!--Name-->\n                                            <div class=\"col-sm-6  mb-6  mb-6 form-group\" app-text-input\n                                                [form]=\"service.form\" [lable]=\"service.u.r.name\" fcn=\"name\"\n                                                [formSubmitError]=\"service.isFormSubmitError\">\n                                            </div>\n\n                                            <!--Maritime Freight Price To Small Car-->\n                                            <div class=\"col-sm-6  mb-6  mb-6 form-group\" app-text-input\n                                                *ngIf=\"service.portTypeIsFreight\" [form]=\"service.form\"\n                                                [lable]=\"service.u.r.maritimeFreightPriceToSmallCar\"\n                                                fcn=\"maritimeFreightPriceToSmallCar\"\n                                                [formSubmitError]=\"service.isFormSubmitError\">\n                                            </div>\n                                        </div>\n\n                                        <!--R O W 2-->\n                                        <div class=\"row\" *ngIf=\"service.portTypeIsFreight\">\n                                            <!--Maritime Freight Price To Medium Car-->\n                                            <div class=\"col-sm-6  mb-6  mb-6 form-group\" app-text-input\n                                                [form]=\"service.form\"\n                                                [lable]=\"service.u.r.maritimeFreightPriceToMediumCar\"\n                                                fcn=\"maritimeFreightPriceToMediumCar\"\n                                                [formSubmitError]=\"service.isFormSubmitError\">\n                                            </div>\n\n\n                                            <!--Maritime Freight Price To Big Car-->\n                                            <div class=\"col-sm-6  mb-6  mb-6 form-group\" app-text-input\n                                                [form]=\"service.form\" [lable]=\"service.u.r.maritimeFreightPriceToBigCar\"\n                                                fcn=\"maritimeFreightPriceToBigCar\"\n                                                [formSubmitError]=\"service.isFormSubmitError\">\n                                            </div>\n                                        </div>\n\n                                         <!--R O W 3-->\n                                         <div class=\"row\" *ngIf=\"service.portTypeIsFreight\">\n                                            <!--Background Color-->\n                                            <div class=\"col-sm-6  mb-6  mb-6 form-group\" app-color-input\n                                                [form]=\"service.form\"\n                                                [lable]=\"service.u.r.backgroundColor\"\n                                                fcn=\"backgroundColor\"\n                                                [formSubmitError]=\"service.isFormSubmitError\">\n                                            </div>\n\n\n                                                     <!--CFont olor-->\n                                                     <div class=\"col-sm-6  mb-6  mb-6 form-group\" app-color-input\n                                                     [form]=\"service.form\"\n                                                     [lable]=\"service.u.r.fontColor\"\n                                                     fcn=\"fontColor\"\n                                                     [formSubmitError]=\"service.isFormSubmitError\">\n                                                 </div>\n     \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"account-settings-footer\">\n        <div class=\"as-footer-container d-flex justify-content-end\">\n            <button id=\"multiple-messages\" class=\"btn btn-primary\" type=\"submit\"\n                [disabled]=\"service.isRequestingToServer\">\n                {{service.u.r.saveChange}}\n                <div *ngIf=\"service.isRequestingToServer\" [title]=\"service.u.r.loadingData\"\n                    class=\"spinner-grow text-white mr-2 align-self-center loader-sm\"></div>\n            </button>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { SharedComponents } from \"src/app/shared.components\";\nimport { IPort } from \"src/interfaces/i.port.interface\";\nimport { AlertService } from \"src/services/alert.service\";\nimport { PortService } from \"src/services/port.service\";\n\n@Component({\n  selector: 'app-edit-general-setting',\n  templateUrl: '../create-port/create.port.component.html',\n  styles: [\n  ]\n})\nexport class EditPortComponent extends SharedComponents implements OnInit {\n\n  constructor(public service: PortService, private activatedRoute: ActivatedRoute) { super() }\n\n  ngOnInit(): void {\n    this.service.updatePortTypeInformation(this.activatedRoute.snapshot.data.portType);\n    this.service.initCreateUpdateForm();\n    this.service.updateSeoPage(\"editPort\");\n\n    //Get From The Serer\n    this.getPortToUpdate();\n  }\n\n  /**\n   * Get Genral Setting From Server To Update\n   */\n  getPortToUpdate() {\n    this.allSubscriptions.push(\n      this.service.http.getPortToUpdate<IPort>(this.activatedRoute.snapshot.params.targetId)\n        .subscribe(res => {\n          debugger\n          if (res.isSuccess) {\n            if (this.service.portTypeIsFreight) {\n              this.service.form.setValue(res.result);\n\n            } else {\n              this.service.form.setValue({\n                _id: res.result._id,\n                name: res.result.name,\n                portType: res.result.portType,\n              });\n            }\n          }\n        }, error => {\n          AlertService.canRequestError(error);\n        }));\n  }\n\n  /**\n   * Update Item\n   */\n  onSubmit() {\n    if (this.service.form.invalid) {\n      this.service.isFormSubmitError = true;\n      return;\n    }\n    this.service.isRequestingToServer = true;\n    this.service.form.disable();\n    this.allSubscriptions.push(\n      this.service.http.updatePort<IPort>(this.service.form.value)\n        .subscribe(res => {\n          AlertService.showResponseMessage(res);\n          this.service.isRequestingToServer = false;\n          if (res.isSuccess) {\n            this.service.form.enable();\n          }\n        }, error => {\n          AlertService.canRequestError(error);\n        }));\n  }\n\n}//End Class\n","import { CustomValidatorsService } from './custom.validators.service';\nimport { ICity } from './../interfaces/i.city.interface';\nimport { Router } from '@angular/router';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormControlName, FormGroup, Validators } from '@angular/forms';\nimport { IPort } from 'src/interfaces/i.port.interface';\nimport { AlertService } from './alert.service';\nimport { PortTypesEnum } from 'src/enums/port.types.enum';\nimport { HttpService } from './http/http.service';\n@Injectable()\nexport class StateService {\n\n  formSubmitError: boolean = false;\n  isRequestingToServer: boolean = false;\n  formCiteisSubmitError: boolean = false;\n  citties: ICity[] = [];\n  freightPorts: IPort[];\n\n  form: FormGroup = new FormGroup({});\n  formCities: FormGroup = new FormGroup({})\n\n  /** Deleted Item Event*/\n  onDeletedItem: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private router: Router, private builder: FormBuilder,public http:HttpService) { }\n\n  /** Init Form */\n  initForm() {\n    this.form = new FormGroup({\n      _id: new FormControl(null),\n      name: new FormControl(null, [Validators.required]),\n      freightPortId: new FormControl(null, [Validators.required]),\n    });\n\n    this.formCities = new FormGroup({\n      _id: new FormControl(null),\n      name: new FormControl(null, [Validators.required]),\n      landFreightPrice: new FormControl(null, CustomValidatorsService.invalidNumber),\n      listOfCities: new FormArray([])\n    });\n  }\n\n  get listOfCitiesControl() {\n    return (this.formCities.get('listOfCities') as FormArray).controls;\n  }\n\n  /**\n   * Close: Back To The Page\n   */\n  public closeModel() {\n    this.formSubmitError = false;\n    this.formCiteisSubmitError = false;\n    this.form.reset();\n    this.router.navigate(['/setting', 'states']);\n  }\n\n  /**\n   * Add New City\n   */\n  addNewCity(): void {\n    if (this.formCities.invalid) {\n      this.formCiteisSubmitError = true;\n      return;\n    }\n    (<FormArray>this.formCities.get('listOfCities'))\n      .push(\n        this.builder.group({\n          _id: new FormControl(null),\n          name: new FormControl(this.formCities.controls.name.value, [Validators.required]),\n          landFreightPrice: new FormControl(this.formCities.controls.landFreightPrice.value, CustomValidatorsService.invalidNumber),\n          IsDeleting: false\n        }));\n    this.formCities.controls.name.setValue(null);\n    this.formCities.controls.landFreightPrice.setValue(null);\n    this.formCiteisSubmitError = false;\n  }\n\n  /**\n   * Add New City To Update\n   */\n  addNewCityV2(cities: ICity[]): void {\n    let fArray = (<FormArray>this.formCities.get('listOfCities'));\n    cities.forEach(ci =>\n      fArray.push(\n        this.builder.group({\n          _id: ci._id,\n          name: ci.name,\n          landFreightPrice: + ci.landFreightPrice,\n          IsDeleting: false,\n        }))\n    );\n  }\n\n  /** Remove City */\n  removeCity(index: number) {\n    let formArray = (this.formCities.get('listOfCities') as FormArray);\n    let deletingObject = formArray.controls[index]\n    //Check If This Is Update Process\n    if (!this.form.controls._id.value || !deletingObject.value._id) {\n      //Remove In Create Case\n      formArray.removeAt(index)\n    } else {\n      deletingObject.patchValue({\n        _id: deletingObject.value._id,\n        name: deletingObject.value.name,\n        landFreightPrice: + deletingObject.value.landFreightPrice,\n        IsDeleting: true\n      });\n      deletingObject.disable();\n    }\n  }\n\n  /**Get Items To Select From Them */\n  getItems(itemName?: string): void {\n\n    this.http.getSelectItems<any>([\"freightPorts\"]).subscribe(res => {\n      if (res.isSuccess) {\n        /** بما اننا ناتى بكل الموانى اذانريد ان نصففها على حسب الحاجة هنا */\n        this.freightPorts = res.result.freightPorts\n      } else {\n        AlertService.showResponseMessage(res);\n      }\n    }, error => {\n      AlertService.canRequestError(error);\n    })\n  }\n\n  //Reload Items\n  reloadItems(itemName: string): void {\n    this.http.getSelectItems<any>(\n      [itemName]).subscribe(res => {\n        if (res.isSuccess) {\n          /** بما اننا ناتى بكل الموانى اذانريد ان نصففها على حسب الحاجة هنا */\n          this.freightPorts = res.result[itemName]\n        }\n        AlertService.showResponseMessage(res);\n      }, error => {\n        AlertService.canRequestError(error);\n      })\n  }\n}//End Class","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { SharedComponents } from \"src/app/shared.components\";\nimport { IPort } from \"src/interfaces/i.port.interface\";\nimport { FOPModel } from \"src/models/fop/fop.model\";\nimport { AlertService } from \"src/services/alert.service\";\nimport { CurrentUserService } from \"src/services/authentcation/current.user.service\";\nimport { HttpService } from \"src/services/http/http.service\";\nimport { PortService } from \"src/services/port.service\";\nimport { SEOService } from \"src/services/seo.service\";\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './ports.component.html',\n  styles: [\n  ]\n})\n/**\n * This a general controller \n * \n */\nexport class PortsComponent extends SharedComponents implements OnInit {\n  /**\n   * Page Target\n   */\n  skip: number = 0;\n  limit: number = 50;\n  entries: IPort[];\n  fop: FOPModel = new FOPModel();\n  fopSearch: string;\n  constructor(public service: PortService, private activateRouter: ActivatedRoute) { super() }\n\n  ngOnInit(): void {\n    //Listener On Parems\n    this.allSubscriptions.push(\n      this.activateRouter.params.subscribe(parms => {\n        this.service.updatePortTypeInformation(this.activateRouter.snapshot.data.portType);\n        this.entries = [];\n        this.skip = 0\n        this.fop = new FOPModel();\n        this.getEntiries();\n      })\n\n    );\n    //Listener On Delete Item Event\n    this.allSubscriptions.push(\n      this.service.onDeletedItem.subscribe(deletedItemId => {\n        let deletedIndex = this.entries.findIndex(ent => ent._id == deletedItemId);\n        if (deletedIndex >= 0) {\n          this.entries.splice(deletedIndex, 1);\n          this.fop = new FOPModel(this.fop.fieldNames, this.entries.length);\n        }\n      }));\n\n  }\n\n\n  /**\n * Get My Users\n */\n  getEntiries(isFilter: boolean = false): void {\n    this.fop.paging.isRequestingToServer = true;\n\n    //Get Users Now From Server\n    this.allSubscriptions.push(\n      this.service.http.getPorts<IPort[]>(this.skip, this.limit,this.service.portType).subscribe(res => {\n        //Update FOP Properties\n        if (res.noMoreOfResult)\n          this.fop.paging.disableGetMoreButton = true;\n        this.fop.paging.isRequestingToServer = false;\n\n        if (res.isSuccess) {\n          this.entries = [...this.entries, ...res.result];\n\n          //Fop \n          this.fop = new FOPModel(this.fop.fieldNames, this.entries.length);\n          this.skip += this.limit;\n        } else {\n          AlertService.showResponseMessage(res);\n        }\n      }, error => {\n        AlertService.canRequestError(error);\n        this.fop.paging.isRequestingToServer = false;\n      }, () => {\n        this.fop.paging.isRequestingToServer = false;\n      }));\n  }\n\n\n  funTrack(index: number, entitiy: IPort): string | undefined {\n    return entitiy?._id;\n  }\n}//End Class\n","<!--Table-->\n<div class=\"row layout-top-spacing\">\n    <div class=\"col-lg-12\">\n        <div class=\"statbox widget  \">\n            <div class=\"widget-header\">\n                <div class=\"d-flex justify-content-between\">\n                    <div>\n                        <h4 [innerHtml]=\"service.u.r[service.currentPageTargetName]\"></h4>\n                    </div>\n                    <div>\n                        <a [routerLink]=\"['/setting','ports',service.portTypeName,'create']\"\n                            class=\"btn btn-outline-dark mb-2\" [innerHtml]=\"service.u.r.createNew\"></a>\n                    </div>\n                </div>\n            </div>\n            <div class=\"widget-content widget-content-area\">\n                <div class=\"row form-group\">\n                    <div class=\"table-responsive\">\n                        <!--SMS Print,Excel,PDF,Search,....-->\n                        <fop-header tableId=\"portTable\" (searchText)=\"fopSearch=$event\"></fop-header>\n                        <table id=\"portTable\" class=\"table mb-4 table-hover\">\n                            <!--Header For Freights Ports-->\n                            <thead *ngIf=\"service.portTypeIsFreight\">\n                                <tr>\n                                    <th class=\"th-20\">\n                                        <fop-sort [fop]=\"fop\" filedName=\"name\" [fieldText]=\"service.u.r.name\">\n                                        </fop-sort>\n                                    </th>\n                                    <th class=\"th-20\">\n                                        <fop-sort [fop]=\"fop\" filedName=\"maritimeFreightPriceToSmallCar\" [fieldText]=\"service.u.r.maritimeFreightPriceToSmallCar\">\n                                        </fop-sort>\n                                    </th>\n                                    <th class=\"th-20\">\n                                        <fop-sort [fop]=\"fop\" filedName=\"maritimeFreightPriceToMediumCar\" [fieldText]=\"service.u.r.maritimeFreightPriceToMediumCar\">\n                                        </fop-sort>\n                                    </th>\n                                    <th class=\"th-25\">\n                                        <fop-sort [fop]=\"fop\" filedName=\"maritimeFreightPriceToBigCar\" [fieldText]=\"service.u.r.maritimeFreightPriceToBigCar\">\n                                        </fop-sort>\n                                    </th>\n                                    <th class=\"th-10\" [innerHtml]=\"service.u.r.actions\"></th>\n                                </tr>\n                            </thead>\n                            <!--Header For Arrival Ports-->\n                            <thead *ngIf=\"!service.portTypeIsFreight\">\n                                <tr>\n                                    <th class=\"th-90\">\n                                        <fop-sort [fop]=\"fop\" filedName=\"name\" [fieldText]=\"service.u.r.name\">\n                                        </fop-sort>\n                                    </th>\n                                    <th class=\"th-10\" [innerHtml]=\"service.u.r.actions\"></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr\n                                *ngFor=\"let item of entries|fopFilterPipe:fopSearch:fop |fopSortPipe:fop.sort.fieldName: fop.sort.reverse  | slice:fop.paging.pagingLimt.skip:fop.paging.pagingLimt.take;trackBy:funTrack\"\n                                \n                                [style.background-color]=\"item.backgroundColor\"\n                                    >\n                                    <td [style.color]=\"item.fontColor\" [innerHtml]=\"item.name\"></td>\n                                    <td [style.color]=\"item.fontColor\" *ngIf=\"service.portTypeIsFreight\" [innerHtml]=\"item.maritimeFreightPriceToSmallCar\"></td>\n                                    <td [style.color]=\"item.fontColor\" *ngIf=\"service.portTypeIsFreight\" [innerHtml]=\"item.maritimeFreightPriceToMediumCar\"></td>\n                                    <td [style.color]=\"item.fontColor\" *ngIf=\"service.portTypeIsFreight\" [innerHtml]=\"item.maritimeFreightPriceToBigCar\"></td>\n                                    <td [style.color]=\"item.fontColor\" style=\"display: inline-flex;\">\n                                        <!--Loader-->\n                                        <div class=\"spinner-grow text-danger align-self-center loader-sm\"\n                                            *ngIf=\"item.actionDisapled\">\n                                        </div>\n\n                                        <!--Edit-->\n                                        <a *ngIf=\"!item.actionDisapled\"\n                                            [routerLink]=\"['/setting','ports',service.portTypeName,'edit',item._id]\"\n                                            [state]=\"{editingItemName:item.name}\" class=\"mr-2\"\n                                            [title]=\"service.u.r.edit\">\n                                            <i class=\"far fa-edit fa-1-5x  jumb-animation\"></i>\n                                        </a>\n\n\n                                        <!--Delete-->\n                                        <a *ngIf=\"!item.actionDisapled\"\n                                            [routerLink]=\"['/setting','ports',service.portTypeName,'delete',item._id]\"\n                                            [state]=\"{deletingItemName:item.name}\" class=\"mr-2\"\n                                            [title]=\"service.u.r.delete\">\n                                            <i class=\"far fa-trash-alt fa-1-5x  jumb-animation\"></i>\n                                        </a>\n\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <!--Paging-->\n                        <fop-paging [fop]=\"fop\" (getMoreItems)=\"getEntiries()\"></fop-paging>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!--Router Let For Create And Update Compoentns-->\n<router-outlet></router-outlet>"],"sourceRoot":"webpack:///"}