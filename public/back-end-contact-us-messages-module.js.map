{"version":3,"sources":["./src/app/back-end/back-end-contact-us/back.end.contact.us.component.ts","./src/app/back-end/back-end-contact-us/back.end.contact.us.component.html","./src/modules/back-end/contact.us.messages.module.ts","./src/modules/back-end/contact.us.messages.router.module.ts"],"names":[],"mappings":"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","file":"back-end-contact-us-messages-module.js","sourcesContent":["import { environment } from 'src/environments/environment';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { FOPModel } from 'src/models/fop/fop.model';\nimport { AlertService } from 'src/services/alert.service';\nimport { SharedComponents } from '../../shared.components';\nimport { IUser } from 'src/interfaces/i.user.interface';\nimport { UserService } from 'src/services/user.service';\nimport { BranchesEnum } from 'src/enums/branches.enum';\nimport { CurrentUserService } from 'src/services/authentcation/current.user.service';\nimport { HttpService } from 'src/services/http/http.service';\nimport { SEOService } from 'src/services/seo.service';\nimport { SweetAlertService } from 'src/services/sweet.alert.service';\nimport { IContactUs } from 'src/interfaces/i.contact.us.interface';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './back.end.contact.us.component.html',\n  styles: [\n  ]\n})\nexport class BackEndContactUsComponent extends SharedComponents implements OnInit {\n\n  skip: number = 0;\n  limit: number = 30;\n  entries: IContactUs[] = [];\n  fop: FOPModel = new FOPModel();\n  fopSearch: string;\n  filterForm: FormGroup = new FormGroup({});\n  env = environment;\n  constructor(public u: CurrentUserService, public seoService: SEOService, public http: HttpService,  public sweetAlertService: SweetAlertService) { super(); }\n\n  ngOnInit(): void {\n    this.seoService.updateSEO(\"contactUs\");\n    //Init Form Group\n    this.filterForm = new FormGroup({\n      name: new FormControl(null),\n      email: new FormControl(null),\n      createdDate: new FormControl(null),\n      subject: new FormControl(null)\n    });\n    //Get Contact Us Messages\n    this.getContactUsMessages();\n\n  }\n\n  /**\n   * Get Contact Us Messages\n   */\n  getContactUsMessages(isFilter: boolean = false): void {\n    this.fop.paging.isRequestingToServer = true;\n    this.filterForm.disable();\n    if (isFilter) {\n      this.entries = [];\n      this.skip = 0;\n      this.fop = new FOPModel(this.fop.fieldNames, this.entries.length);\n    }\n\n    //Get Users Now From Server\n    this.allSubscriptions.push(\n      this.http.getContactUsMessages<IContactUs[]>(this.skip, this.limit, this.filterForm.value).subscribe(res => {\n        //Enable Filter Form Now\n        this.filterForm.enable();\n        //Update FOP Properties\n        if (res.noMoreOfResult)\n          this.fop.paging.disableGetMoreButton = true;\n        this.fop.paging.isRequestingToServer = false;\n\n\n        if (res.isSuccess) {\n          this.entries = [...this.entries, ...res.result];\n\n          //Fop \n          this.fop = new FOPModel(this.fop.fieldNames, this.entries.length);\n          this.skip += this.limit;\n        } else {\n          AlertService.showResponseMessage(res);\n        }\n        this.fop.paging.isRequestingToServer = false;\n        this.filterForm.enable();\n      }, error => {\n        AlertService.canRequestError(error);\n        this.fop.paging.isRequestingToServer = false;\n        this.filterForm.enable();\n      },\n        () => {\n\n        }));\n  }\n\n\n  funTrack(index: number, user: IUser): string | undefined {\n    return user?._id;\n  }\n\n  /**Reset Form Filter And Get Users Affter Reset */\n  resetFilter(): void {\n    this.filterForm.reset();\n    this.getContactUsMessages(true);\n  }\n\n\n\n\n}//End Class\n","<div class=\"row layout-top-spacing\">\n\n    <div class=\"col-lg-12\">\n        <div class=\"statbox widget  \">\n            <div class=\"widget-header\">\n                <div class=\"row\">\n                    <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                        <h4 [innerText]=\"u.r.filterInMessages\"></h4>\n                    </div>\n                </div>\n            </div>\n            <div class=\"widget-content widget-content-area\">\n                <!--Fiter Form-->\n                <form novalidate [formGroup]=\"filterForm\" (submit)=\"getContactUsMessages(true)\">\n                    <!--R O W 1-->\n                    <div class=\"form-row form-group\">\n                        <!--Name-->\n                        <div class=\"col\">\n                            <label for=\"name\" [innerText]=\"u.r.name\"></label>\n                            <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\">\n                        </div>\n                        <!--Email-->\n                        <div class=\"col\">\n                            <label for=\"email\" [innerText]=\"u.r.email\"></label>\n                            <input type=\"text\" class=\"form-control\" id=\"postContent\" formControlName=\"email\">\n                        </div>\n                        <!--Subject-->\n                        <div class=\"col\">\n                            <label for=\"name\" [innerText]=\"u.r.subject\"></label>\n                            <input type=\"text\" class=\"form-control\" id=\"subject\" formControlName=\"subject\">\n                        </div>\n                        <!--sendDate-->\n                        <div class=\"col\" app-date-input [form]=\"filterForm\" [lable]=\"u.r.sendDate\" fcn=\"createdDate\">\n                        </div>\n                    </div>\n                    <div class=\"form-group  mb-2 d-flex justify-content-end\">\n                        <button class=\"btn btn-lg btn-secondary mb-3 mr-3\" type=\"submit\"\n                            [disabled]=\"fop.paging.isRequestingToServer\">\n                            {{u.r.search}}\n                            <div *ngIf=\"fop.paging.isRequestingToServer\" [title]=\"u.r.loadingData\"\n                                class=\"spinner-grow text-white mr-2 align-self-center loader-sm\"></div>\n                        </button>\n                        <button class=\"btn btn-warning btn-lg  mb-3 mr-3\" type=\"button\" [innerText]=\"u.r.cancel\"\n                            (click)=\"resetFilter()\" [disabled]=\"fop.paging.isRequestingToServer\">\n                        </button>\n\n                    </div>\n                </form>\n\n            </div>\n        </div>\n    </div>\n</div>\n\n<!--Table-->\n<div class=\"row layout-top-spacing\">\n    <div class=\"col-lg-12\">\n        <div class=\"statbox widget  \">\n            <div class=\"widget-header\">\n                <div class=\"row\">\n                    <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                        <h4 [innerText]=\"u.r.contactUsMessages\"></h4>\n                    </div>\n                </div>\n            </div>\n            <div class=\"widget-content widget-content-area\">\n                <div class=\"row form-group\">\n                    <div class=\"table-responsive\">\n                        <!--SMS Print,Excel,PDF,Search,....-->\n                        <fop-header (searchText)=\"fopSearch=$event\" tableId=\"allClinetsTable\"></fop-header>\n                        <table id=\"allClinetsTable\" class=\"table mb-4 table-hover\">\n                            <thead>\n                                <tr>\n                                    <th>\n                                        <fop-sort [fop]=\"fop\" filedName=\"name\" [fieldText]=\"u.r.name\">\n                                        </fop-sort>\n                                    </th>\n\n                                    <th>\n                                        <fop-sort [fop]=\"fop\" filedName=\"subject\" [fieldText]=\"u.r.subject\">\n                                        </fop-sort>\n                                    </th>\n                                    <th>\n                                        <fop-sort [fop]=\"fop\" filedName=\"email\" [fieldText]=\"u.r.email\">\n                                        </fop-sort>\n                                    </th>\n                                    <th>\n                                        <fop-sort [fop]=\"fop\" filedName=\"message\" [fieldText]=\"u.r.message\">\n                                        </fop-sort>\n                                    </th>\n                                    <th>\n                                        <fop-sort [fop]=\"fop\" filedName=\"clinetName\" [fieldText]=\"u.r.clinetName\">\n                                        </fop-sort>\n                                    </th>\n                                    <th>\n                                        <fop-sort [fop]=\"fop\" filedName=\"clinetPhoneNumber\"\n                                            [fieldText]=\"u.r.clinetPhoneNumber\">\n                                        </fop-sort>\n                                    </th>\n\n                                    <th>\n                                        <fop-sort [fop]=\"fop\" filedName=\"createdDate\" [fieldText]=\"u.r.sendDate\">\n                                        </fop-sort>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr\n                                    *ngFor=\"let user of entries|fopFilterPipe:fopSearch:fop |fopSortPipe:fop.sort.fieldName: fop.sort.reverse  | slice:fop.paging.pagingLimt.skip:fop.paging.pagingLimt.take;trackBy:funTrack\">\n                                    <td [innerText]=\"user.name||''\"></td>\n                                    <td [innerText]=\"user.subject\"></td>\n                                    <td [innerText]=\"user.email\"></td>\n                                    <td [innerText]=\"user.message\"></td>\n                                    <td  >\n                                        <a [routerLink]=\"['/reports','freights',user.userId]\"\n                                            [queryParams]=\"{'userName':user.name}\">{{user.clinetName}}</a>\n                                    </td>\n                                    <td [innerText]=\"user.clinetPhoneNumber||''\"></td>\n                                    <td [innerText]=\"user.createdDate|date\"></td>\n\n                                </tr>\n                            </tbody>\n                        </table>\n                        <!--Paging-->\n                        <fop-paging [fop]=\"fop\" (getMoreItems)=\"getContactUsMessages()\"></fop-paging>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<router-outlet></router-outlet>","import { ContactUsMessagesRouterModule } from './contact.us.messages.router.module';\nimport { NgModule } from \"@angular/core\";\nimport { BackEndContactUsComponent } from \"src/app/back-end/back-end-contact-us/back.end.contact.us.component\";\nimport { BranchService } from \"src/services/branch.service\";\nimport { FormInputsModeul } from \"./form.inputs.module\";\nimport { SharedBackEndModule } from \"./shared.back.end.module\";\n\n@NgModule({\n  declarations: [\n    BackEndContactUsComponent\n  ],\n  imports: [\n    SharedBackEndModule,\n    FormInputsModeul,\n    ContactUsMessagesRouterModule\n\n  ],\n  providers:[]\n})\nexport class ContactUsMessagesModule {\n}","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { BackEndContactUsComponent } from \"src/app/back-end/back-end-contact-us/back.end.contact.us.component\";\n\n \nconst ROUTS: Routes = [\n    { path: '', component: BackEndContactUsComponent, },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(ROUTS)],\n    exports: [RouterModule]\n})\nexport class ContactUsMessagesRouterModule {\n\n}\n\n"],"sourceRoot":"webpack:///"}